name: Test matrix

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

defaults:
  run:
    shell: bash

env:
  matrix1: '[{"name":"powerva-chat-adapter-test-util","path":"packages/powerva-chat-adapter-test-util","private":false,"version":"0.0.1-main.20230826-060844.5a47d26"},{"name":"powerva-turn-based-chat-adapter-framework","path":"packages/powerva-turn-based-chat-adapter-framework","private":false,"version":"0.0.1-main.20230826-060844.5a47d26"},{"name":"powerva-chat-adapter","path":"packages/powerva-chat-adapter","private":false,"version":"0.0.1-main.20230826-060844.5a47d26"},{"name":"pages","path":"packages/pages","private":true,"version":"0.0.0-main.20230826-060844.5a47d26"}]'
  matrix2: '[{"name":"package-a"},{"name":"package-b"}]'

jobs:
  prepare:
    name: Prepare
    outputs:
      matrix1: ${{ steps.set-outputs.outputs.matrix1 }}
      matrix2: ${{ steps.set-outputs.outputs.matrix2 }}
    runs-on: ubuntu-latest
    steps:
      - id: set-outputs
        name: Set outputs
        run: |
          echo matrix1=$matrix1 | tee --append $GITHUB_OUTPUT
          echo matrix2=$matrix2 | tee --append $GITHUB_OUTPUT
      - name: Print outputs
        run: |
          echo ${{ steps.set-outputs.outputs.matrix1 }}
          echo ${{ steps.set-outputs.outputs.matrix2 }}

  build0:
    name: Build 0
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ needs.prepare.outputs.matrix1 }}
          echo ${{ needs.prepare.outputs.matrix2 }}

  build1:
    name: Build 1
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - window-latest
        include: ${{ fromJSON(needs.prepare.outputs.matrix1) }}
    steps:
      - run: |
          echo '${{ matrix.name }}'
          echo '${{ matrix.os }}'
      - run: |
          cat << EOL
          ${{ toJSON(matrix) }}
          EOL

  build2:
    name: Build 2
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - window-latest
        include: ${{ fromJSON(needs.prepare.outputs.matrix2) }}
    steps:
      - run: |
          echo '${{ matrix.name }}'
          echo '${{ matrix.os }}'
      - run: |
          cat << EOL
          ${{ toJSON(matrix) }}
          EOL

  build3:
    name: Build 3
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - window-latest
        include:
          - file: package-a
          - file: package-b
    steps:
      - run: |
          echo '${{ matrix.name }}'
          echo '${{ matrix.os }}'
      - run: |
          cat << EOL
          ${{ toJSON(matrix) }}
          EOL
