name: Publish package

on:
  workflow_dispatch:
    inputs:
      # In pull-request-validation.yml, we enforce that the package name must equals to the package path.
      package-name:
        description: Package name
        options:
          - powerva-turn-based-chat-adapter-framework
          - powerva-chat-adapter
        required: true
        type: choice

concurrency: publish-package

env:
  node-version: lts/Hydrogen

jobs:
  build:
    name: Build
    outputs:
      package-path: ${{ steps.get-package-json.outputs.package-path }}
      version: ${{ steps.bump-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: ${{ env.node-version }}
      - run: npm clean-install
      - # Gets the path of the package which match inputs.package-name.
        id: get-package-json
        name: Get package JSON
        run: echo package-path=`npm ls --workspace=${{ inputs.package-name }} --json | jq --arg packageName ${{ inputs.package-name }} -r '.dependencies[$packageName].resolved | ltrimstr("file:../") | if . then . else halt_error(1) end'` >> $GITHUB_OUTPUT
      - name: 'Sanity check: found package path'
        run: |
          ls -l ${{ steps.get-package-json.outputs.package-path }}/package.json
          compgen -G ${{ steps.get-package-json.outputs.package-path }}/package.json
      - name: 'Sanity check: package.json/name is same as package-name'
        run: |
          cat ${{ steps.get-package-json.outputs.package-path }}/package.json
          cat ${{ steps.get-package-json.outputs.package-path }}/package.json | jq '.name == "${{ inputs.package-name }}" | if . then empty else halt_error(1) end'
      - name: 'Sanity check: package.json/version must be prerelease'
        run: |
          cat ${{ steps.get-package-json.outputs.package-path }}/package.json
          cat ${{ steps.get-package-json.outputs.package-path }}/package.json | jq '.version | contains("-") | if . then empty else halt_error(1) end'
      - id: bump-version
        name: Bump version
        run: |
          npm version --no-git-tag-version --workspace=${{ inputs.package-name }} patch
          echo version=`npm version --json --workspace=${{ inputs.package-name }} | jq --arg packageName ${{ inputs.package-name }} -r '.[$packageName]'` >> $GITHUB_OUTPUT
          cat ${{ steps.get-package-json.outputs.package-path }}/package.json
      - name: Build
        run: npm run build --if-present --workspaces=true
      - id: pack-tarball
        name: Pack tarball
        run: |
          npm pack --pack-destination=$PWD --workspace=${{ inputs.package-name }}
          echo tarball-path=./${{ inputs.package-name }}-${{ steps.bump-version.outputs.version }}.tgz >> $GITHUB_OUTPUT
      - name: 'Sanity check: got tarball'
        run: compgen -G ${{ steps.pack-tarball.outputs.tarball-path }}
      - name: Upload tarball artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ${{ steps.pack-tarball.outputs.tarball-path }}

  bump-to-prepatch:
    environment: pull-request
    name: Bump to prepatch
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: ${{ env.node-version }}
      - id: bump-to-prepatch
        name: Bump to prepatch
        run: |
          npm version --no-git-tag-version --workspace=${{ inputs.package-name }} ${{ needs.build.outputs.version }}
          npm version --no-git-tag-version --workspace=${{ inputs.package-name }} prepatch

          echo version=`npm version --json --workspace=${{ inputs.package-name }} | jq --arg packageName ${{ inputs.package-name }} -r '.[$packageName]'` >> $GITHUB_OUTPUT

          cat ${{ needs.build.outputs.package-path }}/package.json
      - env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        name: Create branch
        run: |
          git checkout -b bot/publish/${{ inputs.package-name }}/${{ steps.bump-to-prepatch.outputs.version }}
          git add ./package-lock.json
          git add ./packages/${{ inputs.package-name }}/package.json
          git commit -m "Bump ${{ inputs.package-name }}@${{ steps.bump-to-prepatch.outputs.version }}"
      - id: create-pull-request
        name: Create pull request
        run: echo url=`gh pr create --assignee @me --fill --label bot --repo ${{ github.repository }}` >> $GITHUB_OUTPUT
      - name: Summary
        run: |
          echo Pull request to bump \`${{ inputs.package-name }}@${{ steps.bump-to-prepatch.outputs.version }}\` is created at ${{ steps.create-pull-request.outputs.url }}. >> $GITHUB_STEP_SUMMARY
