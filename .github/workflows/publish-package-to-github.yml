name: Publish package to GitHub

on:
  workflow_dispatch: {}

env:
  node-version: lts/Hydrogen

jobs:
  prepare:
    name: Prepare tarballs
    runs-on: ubuntu-latest
    steps:
      - env:
          GH_TOKEN: ${{ github.token }}
        name: Download release asset
        run: |
          gh release download release/vnext --repo ${{ github.repository }}
          ls -la

      - name: Add alias to */package.json
        run: |
          mkdir ./package/

          for TARBALL_NAME in `cat package-versions.json | jq -r 'to_entries | map(select(.value.private | not)) | map(.value.tarball) | join("\n")'`
          do
            tar --to-stdout -xvf $TARBALL_NAME package/package.json | jq --argfile versions package-versions.json -r '. | (.name = "@compulim/" + .name) | (.dependencies |= (. | with_entries(if ({ (.key): {} } | inside($versions)) then . | (.value = "npm:@compulim/" + .key + "@" + .value) else . end))) | (.devDependencies |= (. | with_entries(if ({ (.key): {} } | inside($versions)) then . | (.value = "npm:@compulim/" + .key + "@" + .value) else . end)))' > package/package.json

            gunzip -c $TARBALL_NAME > temp.tar
            tar -uvf temp.tar package/package.json
            gzip -c temp.tar > $TARBALL_NAME

            rm temp.tar
            cat package/package.json
            rm package/package.json
          done

      - name: Remove private packages
        run: |
          for TARBALL_NAME in `cat package-versions.json | jq -r 'to_entries | map(select(.value.private)) | map(.value.tarball) | join("\n")'`
          do
            rm $TARBALL_NAME
          done

      - uses: actions/upload-artifact@v3
        with:
          name: package-versions
          path: ./package-versions.json

      - uses: actions/upload-artifact@v3
        with:
          name: tarball
          path: '*.tgz'

  publish:
    environment:
      name: github-packages
    name: Publish
    needs:
      - prepare
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package-versions

      - uses: actions/download-artifact@v3
        with:
          name: tarball

      - uses: actions/setup-node@v3
        with:
          node-version: lts/Hydrogen
          registry-url: https://npm.pkg.github.com/

      - env:
          NODE_AUTH_TOKEN: ${{ github.token }}
        name: Publish release
        run:
          for TARBALL_NAME in `cat package-versions.json | jq -r 'to_entries | map(.value.tarball) | join("\n")'`
          do
            npm publish $TARBALL_NAME
          done
